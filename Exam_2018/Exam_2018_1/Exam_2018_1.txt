1. a)
2. d)
3. d)
4. d)
5. ul li:first-child c)
6. b)
7. If the variables are of the same type c)
8. Means that the variable was/is going to be declared/used elsewhere (in the script or another function) c)
9. foo.onclick = function(){
    changeColor.bind(foo, 'blue');
}

foo.addEventListener('click', changeColor.bind(foo, 'blue'));
c) //foo because it needs the context for 'this'.

10. a)
11. a)
12. a)

==========================================

R(a, b, c, d) 
a: in-line, b: ID, 
c: class, (:)pseudo-class, attributes, d: element, (::)pseudo-element
#id .class space Descent > child

13. R1(0, 1, 0, 1)
14. R2(0, 0, 0, 3)
15. R3(0, 1, 1, 1)
16. R4(0, 0, 2, 0)
17. R5(0, 0, 1, 3)
18. R6(0, 0, 1, 1)


19. font-size of section is 20px by omission. 
every other element has font-size inherit.
what is the font-size value of the first element of the list after all the rules are applied?

20px (default/inherit) -- 12px (R1) -- 13px(R2) -- 15px (R4)


20. How many [cookies could a good cook cook If a good cook could cook cook]ies
21. How many [coo]kies could a good cook cook If a good cook could cook cookies
22. How many cookies could a [goo]d cook cook If a good cook could cook cookies
23. How many cookies could a good cook cook If a good cook could cook [cookies]
24. How many cookies could a goo[d] cook cook If a good cook could cook cookies
25. How many [cookies could a good cook] cook If a good cook could cook cookies

26. P26.js (tested)
27. P27.js (tested)
28. P28.js (only php was not tested)


29. recipes/recipe/name/text()
30. recipes/recipe[@difficulty="medium"]/name/text()
31. recipes/recipe[count(description)>0]/@difficulty
32. recipes/recipe[count(ingredients/ingredient)>3]/name/text()